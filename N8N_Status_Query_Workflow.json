{
  "name": "N8N Status Query Workflow",
  "nodes": [
    {
      "parameters": {
        "path": "task-status/:taskId",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "079f5906-5faa-414d-b425-3ef5b83d2878",
      "name": "Webhook - Query Status",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        120,
        440
      ],
      "webhookId": "2d9c4c2e-c39a-4da2-aaad-2cd096e2009d",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ls9itmRH8ZrWv4rJ",
          "name": "TaskManager"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "id": "cd98cd70-b2a3-42e8-b6b9-ea108ba48667",
      "name": "Respond - Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1160,
        800
      ]
    },
    {
      "parameters": {
        "content": "# Status Query Workflow\n\nThis n8n workflow creates a secure REST API endpoint that allows clients to query the status of a task by providing the taskId. It is ideal for polling or retrieving real-time status and result data of asynchronous background jobs.\n\nðŸ”— Endpoint Summary\nHTTP Method: GET\nEndpoint: /webhook/task-status/:taskId\nAuthentication: HeaderAuth (Authorization: API_KEY)\nResponse Type: JSON\nResponse Code:\n200 â†’ Task found (any state)\n404 â†’ Task ID not found\n\nRequest:\n```json\ncurl -X GET https://dev.mindstreamai.app/webhook/2d9c4c2e-c39a-4da2-aaad-2cd096e2009d/task-status/dd69a407-82f2-4d64-ba9b-a47af52dc0ee \\\n-H \"Authorization: API_KEY\"\n```\n\nSuccessful Response Example (200 OK):\n\n```json\n[{\n  \"task_id\": \"dd69a407-82f2-4d64-ba9b-a47af52dc0ee\",\n  \"status\": \"completed\",\n  \"external_id\": \"job-123\",\n  \"poll_url\": \"https://api.example.com/job/123/status\",\n  \"poll_method\": \"GET\",\n  \"task_type\": \"data_processing\",\n  \"result\": null,\n  \"error_message\": null,\n  \"created_at\": \"2025-05-26T10:34:39.633Z\",\n  \"updated_at\": \"2025-05-26T11:05:43.918Z\",\n  \"attempt_count\": 10,\n  \"max_attempts\": 10,\n  \"timeout_minutes\": 60,\n  \"metadata\": {},\n  \"user_id\": null\n}]\n```\n\nNot Found Example (404):\n\n```json\n{\n  \"error\": \"Task ID not found.\"\n}\n```",
        "height": 1080,
        "width": 1330
      },
      "id": "71fe677c-3057-4c7b-9b98-4591cd67ec06",
      "name": "Query Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        -860
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"error\": \"Task ID not found.\"\n}",
        "options": {
          "responseCode": 404
        }
      },
      "id": "e46d06de-40d6-47f3-a770-ebb15fb55c39",
      "name": "Respond - Not found 404",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1160,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "id": "0d4bf174-1bec-42ba-a832-1f1db36cd818",
      "name": "Respond - Pending",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1160,
        460
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dddaac0b-7e0e-4756-a12d-ddc9a92713f5",
                    "leftValue": "={{ $json.task_id }}",
                    "rightValue": "=NOTFOUND",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Task not found"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "pending",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "425dc982-cf04-4784-aa00-6d7e603f5b6e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pending"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b3d51a0c-5c9d-49c6-944f-a3bd83e6f16e",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Failed"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "949380b8-09c9-40b6-969d-124536c1889f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "completed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Completed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        820,
        420
      ],
      "id": "8a1f67b6-5721-461f-a795-8972557959db",
      "name": "Switch"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "id": "6c3fddf6-2a24-4af3-a11e-5b7d13d84c19",
      "name": "Respond - Failed",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1160,
        620
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d68154fd-d42c-4e69-8818-a5c631fde855",
              "name": "task_id",
              "value": "={{ $json.task_id ?? \"NOTFOUND\" }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        440
      ],
      "id": "69ddaad5-97c1-442f-ac6f-92bddff09dd2",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "task_manager",
          "mode": "list",
          "cachedResultName": "task_manager"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "task_id",
              "value": "={{ $json.params.taskId || 'NOTFOUND' }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        380,
        440
      ],
      "id": "c99ace75-c4d9-4a2e-82df-66e6d4a313b7",
      "name": "Postgres",
      "alwaysOutputData": true,
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "QS2nSiDzjJ5ExoHs",
          "name": "SupaBase-N8N"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook - Query Status": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond - Pending": {
      "main": [
        []
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Respond - Not found 404",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond - Pending",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond - Failed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond - Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "kByCQTr1nYAUTU2a"
  },
  "versionId": "14d394d2-4c31-45ce-831b-12eb5ae1f35f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "306de76e4b7b868087c011f08075d5bdab5fdc016494a71df11c97368feac0db"
  },
  "id": "MIzOkavTd0ZaW7DA",
  "tags": []
}